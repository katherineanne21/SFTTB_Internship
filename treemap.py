# -*- coding: utf-8 -*-
"""TreeMap.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/134R6Tq7msX8V-CaaNAmS2sR25wgsLTaD
"""

# Mount Google Drive
from google.colab import drive
drive.mount('/content/drive', force_remount=True)

# Import required modules
import pandas as pd
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import numpy as np

# Define the scope
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]

# Provide the path to the JSON file
creds = ServiceAccountCredentials.from_json_keyfile_name('/content/drive/Shareddrives/SFTT Shared Drive/0General Management & Admin/Employee Onboarding/SFTT Specific Employees/Summer 2024/Katherine Anne/Colabs/enhanced-keel-424914-m2-7c2e82d072b9.json', scope)

# Authorize the clientsheet
client = gspread.authorize(creds)

# Read in files
compiled_sheet_link = 'https://docs.google.com/spreadsheets/d/1J1FoBE8Da5_WaTi5NmfbgQ3ipN78ZXJYzgKyh73BuUw/edit?usp=sharing'
Compiled_Sheets = client.open_by_url(compiled_sheet_link)
Compiled_Sheet = Compiled_Sheets.get_worksheet(0)
CompiledData = Compiled_Sheet.get_all_values()
CompiledData_df = pd.DataFrame(CompiledData[1:], columns = CompiledData[0])
#CompiledData_df = CompiledData_df[CompiledData_df['Date'] >= '2023-06-04']
print(len(CompiledData_df))
print(CompiledData_df.duplicated(subset=['Latitude', 'Longitude', 'Tree']).sum())

civi_sheet_link = 'https://docs.google.com/spreadsheets/d/1W40ii76nU4BSDL9aGpdSJBMgHQTedIWETkXHFKt2ncc/edit?usp=sharing'
Civi_Sheets = client.open_by_url(civi_sheet_link)
Civi_Sheet = Civi_Sheets.get_worksheet(0)
CiviData = Civi_Sheet.get_all_values()
CiviData_df = pd.DataFrame(CiviData[1:], columns = CiviData[0])
print(len(CiviData_df))
print(CiviData_df.duplicated(subset=['Latitude', 'Longitude', 'Tree']).sum())

# Left merge on multiple columns
merged_df = CiviData_df.merge(CompiledData_df, how='left', on=['Latitude', 'Longitude', 'Tree'])
print(len(merged_df))

# Clean Sheet
# Replace inf and NaN values
merged_df.replace([np.inf, -np.inf], np.nan, inplace=True)
merged_df.fillna(0, inplace=True)

# Print to sheet
spreadsheet = client.open("2024.08.15_CompiledData")
worksheet = spreadsheet.worksheet("Updated")
worksheet.clear()
worksheet.update([merged_df.columns.values.tolist()] + merged_df.values.tolist())